/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
package controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Map;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import model.nomortelp;
import model.helper;
import model.stdfield;
import model.usercredentials;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Rizal.Fathurrahman
 */

public class User extends HttpServlet {

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        PrintWriter out = response.getWriter();
        JSONArray result = new JSONArray();
        Map param = request.getParameterMap();

        //nomortelp m_nomortelp = new nomortelp();
        nomortelp m_nomortelp   = new nomortelp();
        stdfield m_stdfield     = new stdfield();
        usercredentials m_user  = new usercredentials();
        JSONObject obj = new JSONObject();
        

        try {
            if (param.containsKey("npp")) {
                String npp = request.getParameter("npp").trim();
                result = m_user.selectUser(npp);
            } else if (param.containsKey("telpSaringUrut") && param.containsKey("saring") && param.containsKey("cari")) {
                String saring = request.getParameter("saring").trim();
                String cari = request.getParameter("cari").trim();
                result = m_nomortelp.openTelpSaringUrutCari(saring, cari);
            } else if (param.containsKey("kdfield")) {
                String kdfield = request.getParameter("kdfield").trim();
                result = m_stdfield.selectStdField(kdfield);
            } else if (param.containsKey("cuti") && param.containsKey("nopegawai")) {
                String nopegawai = request.getParameter("nopegawai").trim();
                result = m_nomortelp.selectOneCuti(nopegawai);
            } else if (param.containsKey("tglcuti") && param.containsKey("npp")) {
                String nopegawai = request.getParameter("npp").trim();
                result = m_nomortelp.selectTglCuti(nopegawai);
            } else if (param.containsKey("tglmerah")) {
                result = m_nomortelp.viewTglMerah();
            } else if(param.containsKey("showResetter")){
                String npp = request.getParameter("showResetter").trim();
                result = m_user.selectResetter(npp);
            } else if(param.containsKey("resetPin")){
                String npp = request.getParameter("resetPin").trim();
                if(m_user.resetPin(npp)){
                    obj.put("msg", "Sukses");
                    result.add(obj);
                }else{
                    obj.put("msg", "Gagal");
                    result.add(obj);
                }
            } else if(param.containsKey("findUserAuthorizedEform")){
                String npp = request.getParameter("findUserAuthorizedEform").trim();
                result = m_user.findUserEform(npp);
            }
        } catch (Exception ex) {
            result = new JSONArray();
            result.add(helper.setErrorMessage(ex.getMessage()));
            System.out.println(ex.getMessage());
            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
        }
        out.write(result.toJSONString());
        System.out.println(result.toJSONString());
        
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

}
